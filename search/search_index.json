{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome! # Add your introductory text here.","title":"Overview"},{"location":"#welcome","text":"Add your introductory text here.","title":"Welcome!"},{"location":"glossary/","text":"API # Application Program Interfaces are methods for programs to exchange data without the involvement of humans. APIs often involve a schematic description of how the data looks like and where it needs to be sent. Today many APIs are based on HTTP . Container # Containers are discussed in lecture 4 and provide a way to package an application with its runtime requirement in a self-contained manner. Containers also provide limited security isolation. Docker # Docker is one of the earliest modern containerization systems. Docker was largely responsible for promoting the immutable infrastructure concept in containers. Docker also contains the Docker Swarm orchestrator, a very simple system to manage containers across multiple machines. Docker is discussed in lecture 4 and exercise 3 .","title":"A-Z"},{"location":"glossary/#api","text":"Application Program Interfaces are methods for programs to exchange data without the involvement of humans. APIs often involve a schematic description of how the data looks like and where it needs to be sent. Today many APIs are based on HTTP .","title":"API"},{"location":"glossary/#container","text":"Containers are discussed in lecture 4 and provide a way to package an application with its runtime requirement in a self-contained manner. Containers also provide limited security isolation.","title":"Container"},{"location":"glossary/#docker","text":"Docker is one of the earliest modern containerization systems. Docker was largely responsible for promoting the immutable infrastructure concept in containers. Docker also contains the Docker Swarm orchestrator, a very simple system to manage containers across multiple machines. Docker is discussed in lecture 4 and exercise 3 .","title":"Docker"},{"location":"help/","text":"Everybody needs help, and since this is a new situation we have prepared a few channels where you can get help. Before you ask for help # Make sure you strip the code you have a problem with of all unnecessary code, comments, etc. Make sure you upload your code to GitHub so others can take a look at it. Make sure you think through and describe your problem in more detail as you would in a conversation, as digitally it may be harder to follow. Where to ask for help # If you need to send us something, please do so on the email addresses on the introduction page .","title":"Getting help"},{"location":"help/#before_you_ask_for_help","text":"Make sure you strip the code you have a problem with of all unnecessary code, comments, etc. Make sure you upload your code to GitHub so others can take a look at it. Make sure you think through and describe your problem in more detail as you would in a conversation, as digitally it may be harder to follow.","title":"Before you ask for help"},{"location":"help/#where_to_ask_for_help","text":"If you need to send us something, please do so on the email addresses on the introduction page .","title":"Where to ask for help"},{"location":"lectures/","text":"Lecture 1: Introduction # This is an introductory lecture Go to lecture \u00bb Lecture 2: ... #","title":"Overview"},{"location":"lectures/#lecture_1_introduction","text":"This is an introductory lecture Go to lecture \u00bb","title":"Lecture 1: Introduction"},{"location":"lectures/#lecture_2","text":"","title":"Lecture 2: ..."},{"location":"lectures/1-introduction/","text":"Download PPTX \ud83d\udcbb Download MP3 \ud83c\udfa7 Watch Video \ud83c\udfac","title":"1. Introduction to the Cloud"}]}